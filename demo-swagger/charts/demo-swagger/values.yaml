# Default values for hzero-swagger.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: registry.choerodon.com.cn/hzero-hzero/hzero-swagger
  pullPolicy: Always
preJob:
  image: registry.cn-hangzhou.aliyuncs.com/choerodon-tools/dbtool:0.6.2
  timeout: 1200
  preInitDB:
    enable: false
    datasource:
      url: jdbc:mysql://db.hzero.com.cn:3306/hzero_admin?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: hzero
      password: hzero
deployment:
  managementPort: 8051
env:
  open:
    # Eureka 注册中心地址
    EUREKA_DEFAULT_ZONE: http://dev.hzero.com.cn:8000/eureka/
    # 服务以IP地址注册
    EUREKA_INSTANCE_PREFER_IP_ADDRESS: true
    # 是否启用配置中心
    SPRING_CLOUD_CONFIG_ENABLED: false
    # 配置中心地址
    SPRING_CLOUD_CONFIG_URI: http://dev.hzero.com.cn:8010/
    # 数据库地址
    SPRING_DATASOURCE_URL: jdbc:mysql://db.hzero.com.cn:3306/hzero_governance?useUnicode=true&characterEncoding=utf-8&useSSL=false
    # 数据库用户名
    SPRING_DATASOURCE_USERNAME: hzero
    # 数据库密码
    SPRING_DATASOURCE_PASSWORD: hzero
    # 连接池最小空闲连接数
    SPRING_DATASOURCE_MINIMUM_IDLE: 20
    # 连接池允许的最大连接数
    SPRING_DATASOURCE_MAXIMUM_POOL_SIZE: 200
    # 等待连接池分配连接的最大时长（毫秒）
    SPRING_DATASOURCE_CONNECTION_TIMEOUT: 30000
    # Redis地址
    SPRING_REDIS_HOST: redis.hzero.com.cn
    # Redis端口
    SPRING_REDIS_PORT: 6379
    # Redis数据库
    SPRING_REDIS_DATABASE: 1
    # 资源池中最大连接数
    # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整
    SPRING_REDIS_POOL_MAX_ACTIVE: 50
    # 资源池运行最大空闲的连接数
    # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整，一般建议和max-active保持一致，避免资源伸缩带来的开销
    SPRING_REDIS_POOL_MAX_IDLE: 50
    # 当资源池连接用尽后，调用者的最大等待时间(单位为毫秒)
    # 默认 -1 表示永不超时，设置5秒
    SPRING_REDIS_POOL_MAX_WAIT: 5000
    # hystrix熔断时间，12秒，需大于feign/ribbon的超时时间
    # 默认 1000 毫秒，最高设置 2000足矣。如果超时，首先看能不能优化接口相关业务、SQL查询等，不要盲目加大超时时间，否则会导致线程堆积过多，hystrix 线程池卡死，最终服务不可用。
    HYSTRIX_COMMAND_TIMEOUT_IN_MILLISECONDS: 12000
    # 执行命令线程池的核心线程数，也是命令执行的最大并发量，默认10
    HYSTRIX_THREADPOOL_DEFAULT_CORE_SIZE: 128
    # 最大执行线程数
    HYSTRIX_THREADPOOL_DEFAULT_MAXIMUM_SIZE: 256
    # Ribbon从DiscoveryClient同步Server的间隔时间，默认30秒
    RIBBON_SERVER_LIST_REFRESH_INTERVAL: 10000
    # 客户端读取超时时间，超时时间要小于Hystrix的超时时间，否则重试机制就无意义了
    RIBBON_READ_TIMEOUT: 5000
    # 客户端连接超时时间
    RIBBON_CONNECT_TIMEOUT: 2000
    # 续约间隔时间，默认30秒
    EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS: 30
    # 实例故障摘除时间，默认90秒，实际是90*2=180秒，配置45就是90秒
    EUREKA_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS: 45
    # Swagger Client ID
    HZERO_SWAGGER_CLIENT: client
    # Swagger忽略服务
    HZERO_SWAGGER_SKIP_SERVICE: register, gateway, oauth
    # Swagger获取文档次数
    HZERO_SWAGGER_FETCH_TIME: 20
    # Swagger获取文档时间（秒）
    HZERO_SWAGGER_FETCH_SECONDS: 30
    # swagger 基础地址
    HZERO_SWAGGER_BASE_URL: null
    # Redis连接超时时间
    SPRING_REDIS_CONNECT_TIMEOUT: 2000
    # Redis读取超时时间
    SPRING_REDIS_READ_TIMEOUT: 5000
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接
    # 默认值为8，建议设置每个CPU核心一个线程
    SERVER_UNDERTOW_IO_THREADS: 4
    # 每块buffer的空间大小，越小空间被利用越充分
    # 不要设置太大，以免影响其他应用，合适即可
    SERVER_UNDERTOW_BUFFER_SIZE: 1024
    # 启用断路器
    FEIGN_CIRCUITBREAKER_ENABLED: true
    # 配置请求GZIP压缩
    FEIGN_COMPRESSION_REQUEST_ENABLED: true
    # 配置压缩数据大小的下限
    FEIGN_COMPRESSION_REQUEST_MIN_REQUEST_SIZE: 2048
    # 连接超时
    FEIGN_CLIENT_CONFIG_DEFAULT_CONNECT_TIMEOUT: 2000
    # 读取超时
    FEIGN_CLIENT_CONFIG_DEFAULT_READ_TIMEOUT: 5000
    # 是否重试
    SPRING_CLOUD_LB_RETRY_ENABLED: false
    # 重试下一个实例的次数
    SPRING_CLOUD_LB_RETRY_NEXT: 1
    # 重试同一个实例的次数
    SPRING_CLOUD_LB_RETRY_SAME: 0
    # LB 中缓存实例的过期时间
    SPRING_CLOUD_LB_CACHE_TTL: 10s
    # 标签
    SPRING_CLOUD_CONFIG_LABEL: null
    # 日志级别
    LOG_LEVEL: info
    JAVA_OPTS: |
      -Xms1024m -Xmx1536m
metrics:
  path: /actuator/prometheus
  group: spring-boot
logs:
  parser: spring-boot
persistence:
  enabled: false
service:
  enabled: false
  type: ClusterIP
  port: 8050
  name: hzero-swagger
ingress:
  enabled: false
resources:
  limits:
    memory: 1.7Gi
  requests:
    memory: 1.2Gi
