<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hand.demo.infra.mapper.MenuMapper">

    <select id="menuComboList" resultType="com.hand.demo.api.controller.v1.dto.MenuComboDto">
        <!-- 选择需要查询的字段，并为每个字段指定别名，以便映射到 MenuComboDto 类的属性 -->
        SELECT
        menu.menu_name AS menuName,  <!-- 菜单名称 -->
        menu.menu_code AS menuCode,  <!-- 菜单编码 -->
        menu.menu_owner AS menuOwner,  <!-- 菜单负责人 -->
        combo.combo_name AS comboName,  <!-- 套餐名称 -->
        combo.combo_code AS comboCode,  <!-- 套餐编码 -->
        combo.combo_type AS comboType,  <!-- 套餐类型 -->
        combo.sales_area AS salesArea,  <!-- 销售地区 -->
        combo.combo_start_date AS comboStartDate,  <!-- 套餐开始日期 -->
        combo.combo_end_date AS comboEndDate,  <!-- 套餐结束日期 -->
        combo.combo_owner AS comboOwner  <!-- 套餐负责人 -->
        FROM
        menu  <!-- 从 menu 表中查询数据 -->
        LEFT JOIN
        combo  <!-- 使用左连接将 menu 表和 combo 表连接起来 -->
        ON menu.id = combo.menu_id  <!-- 连接条件：menu 表的 id 字段等于 combo 表的 menu_id 字段 -->
        <!-- where 标签用于动态生成查询条件 -->
        <where>
            menu.tenant_id = #{tenantId}  <!-- 筛选条件：menu 表的租户 ID 等于传入的租户 ID -->
            <!-- 如果 menuComboDto 对象的 menuName 属性不为空且不为空字符串，则添加此查询条件 -->
            <if test="menuComboDto.menuName != null and menuComboDto.menuName != ''">
                AND menu.menu_name LIKE CONCAT('%', #{menuComboDto.menuName}, '%')  <!-- 模糊查询：菜单名称包含传入的菜单名称 -->
            </if>
            <!-- 如果 menuComboDto 对象的 menuOwner 属性不为空且不为空字符串，则添加此查询条件 -->
            <if test="menuComboDto.menuOwner != null and menuComboDto.menuOwner != ''">
                AND menu.menu_owner LIKE CONCAT('%', #{menuComboDto.menuOwner}, '%')  <!-- 模糊查询：菜单负责人包含传入的菜单负责人 -->
            </if>
            <!-- 如果 menuComboDto 对象的 comboName 属性不为空且不为空字符串，则添加此查询条件 -->
            <if test="menuComboDto.comboName != null and menuComboDto.comboName != ''">
                AND combo.combo_name LIKE CONCAT('%', #{menuComboDto.comboName}, '%')  <!-- 模糊查询：套餐名称包含传入的套餐名称 -->
            </if>
            <!-- 如果 menuComboDto 对象的 comboOwner 属性不为空且不为空字符串，则添加此查询条件 -->
            <if test="menuComboDto.comboOwner != null and menuComboDto.comboOwner != ''">
                AND combo.combo_owner LIKE CONCAT('%', #{menuComboDto.comboOwner}, '%')  <!-- 模糊查询：套餐负责人包含传入的套餐负责人 -->
            </if>
            <!-- 如果 menuComboDto 对象的 comboType 属性不为空且不为空字符串，则添加此查询条件 -->
            <if test="menuComboDto.comboType != null and menuComboDto.comboType != ''">
                AND combo.combo_type = #{menuComboDto.comboType}  <!-- 精确查询：套餐类型等于传入的套餐类型 -->
            </if>
            <!-- 如果 menuComboDto 对象的 salesArea 属性不为空且不为空字符串，则添加此查询条件 -->
            <if test="menuComboDto.salesArea != null and menuComboDto.salesArea != ''">
                AND combo.sales_area = #{menuComboDto.salesArea}  <!-- 精确查询：销售地区等于传入的销售地区 -->
            </if>
            <!-- 如果 menuComboDto 对象的 comboStartDate 属性不为空，则添加此查询条件 -->
            <if test="menuComboDto.comboStartDate != null">
                AND combo.combo_start_date >= #{menuComboDto.comboStartDate}  <!-- 日期比较：套餐开始日期大于等于传入的开始日期 -->
            </if>
            <!-- 如果 menuComboDto 对象的 comboEndDate 属性不为空，则添加此查询条件 -->
            <if test="menuComboDto.comboEndDate != null">
                AND combo.combo_end_date &lt;= #{menuComboDto.comboEndDate}  <!-- 日期比较：套餐结束日期小于等于传入的结束日期 -->
            </if>
        </where>
    </select>
</mapper>